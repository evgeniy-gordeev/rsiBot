name: Build and Deploy

on:
  push:
    branches:
      - develop
      - master

env:
  ANSIBLE_IMAGE: "999669/ansible-3.5:latest"
  DOCKERFILE: ".docker/Dockerfile"

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout develop branch
        run: |
          git fetch origin develop
          git checkout develop

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }} -f ./${{ env.DOCKERFILE }} .
          docker tag ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }} ${{ secrets.CI_REGISTRY_IMAGE }}:latest
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }}
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}:latest

  deploy:
    name: Deploy to Development
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" | tr -d '\r' > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          chmod 644 ~/.ssh/config

      - name: Run Ansible Playbook using Docker
        run: |
          # Fix permissions inside the container
          docker run --rm \
          -v $(pwd):/workspace \
          -v ~/.ssh:/root/.ssh \
          ${{ env.ANSIBLE_IMAGE }} \
          bash -c "chown -R root:root /root && chmod 600 /root/.ssh/deploy && chmod 644 /root/.ssh/config && ansible-playbook -v /workspace/.ansible/deploy-dev.yaml \
          --private-key=/root/.ssh/deploy -i /workspace/.ansible/inventory/hosts \
          -e docker_registry_creds_username=${{ secrets.CI_REGISTRY_USER }} \
          -e docker_registry_creds_password=${{ secrets.CI_REGISTRY_PASSWORD }} \
          -e docker_registry_data=${{ secrets.CI_REGISTRY_IMAGE }} \
          -e app_version=${{ github.sha }} -e docker_registry_url=${{ secrets.CI_REGISTRY }}"

  deploy-master:
    name: Deploy to Master
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" | tr -d '\r' > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          chmod 644 ~/.ssh/config

      - name: Run Ansible Playbook using Docker
        run: |
          # Fix permissions inside the container
          docker run --rm \
          -v $(pwd):/workspace \
          -v ~/.ssh:/root/.ssh \
          ${{ env.ANSIBLE_IMAGE }} \
          bash -c "chown -R root:root /root && chmod 600 /root/.ssh/deploy && chmod 644 /root/.ssh/config && ansible-playbook -v /workspace/.ansible/deploy-master.yaml \
          --private-key=/root/.ssh/deploy -i /workspace/.ansible/inventory/hosts \
          -e docker_registry_creds_username=${{ secrets.CI_REGISTRY_USER }} \
          -e docker_registry_creds_password=${{ secrets.CI_REGISTRY_PASSWORD }} \
          -e docker_registry_data=${{ secrets.CI_REGISTRY_IMAGE }} \
          -e app_version=${{ github.sha }} -e docker_registry_url=${{ secrets.CI_REGISTRY }}"
