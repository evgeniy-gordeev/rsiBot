import json
import os
from telebot import types

CONFIG_FILE = "config.json"

def read_config(CONFIG_FILE):
    """–ß—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞."""
    if not os.path.exists(CONFIG_FILE):
        raise FileNotFoundError(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª {CONFIG_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    try:
        with open(CONFIG_FILE, 'r') as file:
            return json.load(file)
    except json.JSONDecodeError:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ {CONFIG_FILE}. –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON.")
    except Exception as e:
        raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª {CONFIG_FILE}: {e}")

def write_config(data):
    """–ó–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª."""
    try:
        with open(CONFIG_FILE, 'w') as file:
            json.dump(data, file, indent=4)
    except Exception as e:
        raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª {CONFIG_FILE}: {e}")


def create_main_menu_markup():
    markup = types.InlineKeyboardMarkup()
    itembtn_str1 = types.InlineKeyboardButton('–ó–∞–ø—É—Å–∫üöÄüöÄüöÄ', callback_data='start')
    itembtn_str2 = types.InlineKeyboardButton('STOP‚ùå‚ùå‚ùå', callback_data='stop')
    itembtn_str3 = types.InlineKeyboardButton('–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='settings')
    itembtn_str4 = types.InlineKeyboardButton('–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='set')
    itembtn_str5 = types.InlineKeyboardButton('–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='pos')
    itembtn_str6 = types.InlineKeyboardButton('calculate_24h_pnl', callback_data='24h_pnl')
    markup.add(itembtn_str1, itembtn_str2)
    markup.add(itembtn_str3)
    markup.add(itembtn_str4)
    markup.add(itembtn_str5)
    markup.add(itembtn_str6)
    return markup


from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import time

def get_tradingview_chart(symbol):
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ headless-—Ä–µ–∂–∏–º–µ (–±–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞)
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--disable-gpu")
    
    # –ó–∞–ø—É—Å–∫ –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã TradingView —Å –≥—Ä–∞—Ñ–∏–∫–æ–º
    url = f'https://www.tradingview.com/chart/?symbol={symbol}'
    driver.get(url)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    time.sleep(5)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    screenshot_path = f'{symbol}_chart.png'
    driver.save_screenshot(screenshot_path)
    
    # –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
    driver.quit()
    
    return screenshot_path